version: "2"

services:

  fileserverweb:
    build: ./fileserver
    restart: always
    volumes:
      - ./fileserver/html:/var/www/html
    networks:
      - web

  fluent:
    build: ./fluent
    restart: always
    networks:
      - web
    volumes_from:
       - nginx

  elasticsearch-master:
    build: ./elasticsearch
    restart: always
    environment:
    - mode=master
    - nodes=["elasticsearch-master", "elasticsearch-slave1", "elasticsearch-slave2"]
    networks:
      - web
    ports:
      - 9200:9200

  elasticsearch-slave1:
    build: ./elasticsearch
    restart: always
    environment:
      - mode=slave
      - nodes=["elasticsearch-master", "elasticsearch-slave1", "elasticsearch-slave2"]
    networks:
      - web

  elasticsearch-slave2:
    build: ./elasticsearch
    restart: always
    environment:
      - mode=slave
      - nodes=["elasticsearch-master", "elasticsearch-slave1", "elasticsearch-slave2"]
    networks:
      - web

  kibana:
    build: ./kibana
    restart: always
    ports:
      - 5601:5601
    networks:
      - web

  mysql:
    build: ./mysql
    restart: always
    networks:
      - web

  phpfpm:
    build: ./phpfpm
    restart: always
    volumes_from:
       - fileserverweb
    networks:
      - web

  s3:
    build: ./s3
    restart: always
    ports:
      - 8000:8000
    networks:
      - web
    networks:
      web:
        aliases:
          - s3.docker.test
          - mybucket.s3.docker.test

  nginx:
    build: ./nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    restart: always
    volumes_from:
       - fileserverweb
    networks:
      - web

  twitter:
    build: ./twitter
    restart: always
    networks:
      - web
    environment:
      - consumer_key=foo
      - consumer_secret=foo
      - access_token_key=foo
      - access_token_secret=foo
      - twitter_topic=#docker
      - elasticsearch_url='http://elasticsearch-master:9200'

networks:
  web:
